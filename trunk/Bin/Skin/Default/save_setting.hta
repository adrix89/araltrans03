<HTML>
<HEAD>
	<TITLE>Save Setting</TITLE>
	<HTA:APPLICATION ID="ATHTA_save_setting" 
		APPLICATIONNAME="AralTrans 0.3 Save Setting" 
		BORDER="thin"
		CAPTION="yes"
		ICON="../../AralTrans.exe"
		SHOWINTASKBAR="yes"
		SINGLEINSTANCE="yes"
		SYSMENU="yes"
		WINDOWSTATE="normal"
		CONTEXTMENU="yes"
		MAXIMIZEBUTTON="no"
		MINIMIZEBUTTON="yes"
		NAVIGABLE="no"
		SCROLL="no"
		SELECTION="no"
		>
	<meta http-equiv="Content-Type" content="text/html">
	<meta http-equiv="Cache-Control" content="No-Cache">
	<meta http-equiv="Pragma" content="No-Cache">
	<meta http-equiv="expires" content="now">
	<link rel="stylesheet" href="../Common/common.css" type="text/css">
	<script src="../Common/common.js" type="text/javascript"></script>

<SCRIPT language="javascript">
<!--

var objAralTransApp = new ActiveXObject("AralTrans.Application");

var objProcess = window.dialogArguments;
if(!objProcess)
{
	alert("Invalid Process Object!");
	window.close();
}

var objATContainer = objProcess.ATContainer;
if(!objATContainer)
{
	alert("Failed to get ATContainer Object!");
	window.close();
}

function Save()
{	
	// Check the directory is correct
	var fso = new ActiveXObject("Scripting.FileSystemObject");
	var objXmlFileFolder = getObject("textXmlFileFolder");
	if(fso.FolderExists(objXmlFileFolder.value) == false)
	{
		alert("Invalid folder!");
		objXmlFileFolder.focus();
	}

	// Check the file name is correct
	var objXmlFileName = getObject("textXmlFileName");
	if(objXmlFileName.value == "")
	{
		alert("Please enter the setting file name!");
		objXmlFileName.focus();
	}

	// Make Full-pathname
	var strFilePathName = objXmlFileFolder.value + "\\" + objXmlFileName.value;

	// Create XML Object
	xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
	xmlDoc.async = false;
	var pi = xmlDoc.createProcessingInstruction("xml", "version=\"1.0\" encoding=\"utf-8\"");
	xmlDoc.appendChild(pi);

	// Create Root Element
	var eRoot = xmlDoc.createElement("AralTransSettings");
	xmlDoc.appendChild(eRoot);

	// Create Setting Element
	var eSetting = xmlDoc.createElement("Setting");
	eRoot.appendChild(eSetting);

	
	// Add Basic Informations into 'Setting'
	var eTmp;

	eTmp = xmlDoc.createElement("ExecutionFileName");
	eTmp.text = objProcess.GetExecutionFileName();
	eSetting.appendChild(eTmp);

	eTmp = xmlDoc.createElement("ExecutionFileFolder");
	eTmp.text = objProcess.GetExecutionFileFolder();
	eSetting.appendChild(eTmp);
	
	eTmp = xmlDoc.createElement("ExecutionFileVersion");
	eTmp.text = objProcess.GetExecutionFileVersion();
	eSetting.appendChild(eTmp);

	eTmp = xmlDoc.createElement("ExecutionFileHash");
	eTmp.text = objProcess.GetExecutionFileHash();
	eSetting.appendChild(eTmp);

	eTmp = xmlDoc.createElement("SettingAuthor");
	eTmp.text = getObject("textSettingAuthor").value;
	eSetting.appendChild(eTmp);

	eTmp = xmlDoc.createElement("SettingName");
	eTmp.text = getObject("textSettingName").value;
	eSetting.appendChild(eTmp);

	eTmp = xmlDoc.createElement("SettingDescription");
	eTmp.text = getObject("textSettingDescription").value;
	eSetting.appendChild(eTmp);

	eTmp = xmlDoc.createElement("SettingThumbnailUrl");
	eTmp.text = getObject("textSettingThumbnailUrl").value;
	eSetting.appendChild(eTmp);
	
	eTmp = xmlDoc.createElement("Delay");
	eTmp.text = getObject("textDelay").value;
	eSetting.appendChild(eTmp);
	
	// Add 'DataList' element into 'Setting'
	var eDataList = xmlDoc.createElement("DataList");

	eSetting.appendChild(eDataList);
	
	
	// Add 'PluginList' element into 'Setting'
	var ePluginList = xmlDoc.createElement("PluginList");
	var p_cnt = objATContainer.GetPluginCount();
	for(var i=0; i<p_cnt; i++)
	{
		var plugin = objATContainer.GetPlugin(i);
		if(!plugin) continue;
		var ePlugin = xmlDoc.createElement("Plugin");
		
		eTmp = xmlDoc.createElement("PluginFileName");
		eTmp.text = plugin.GetPluginFileName();
		ePlugin.appendChild(eTmp);
		
		eTmp = xmlDoc.createElement("PluginFileFolder");
		var strAppDir = objATProcess.GetExecutionFileFolder();
		eTmp.text = encodePath(plugin.GetPluginFileFolder(), strAppDir);
		ePlugin.appendChild(eTmp);

		eTmp = xmlDoc.createElement("PluginFileHash");
		eTmp.text = objAralTransApp.GetFileHash(plugin.GetPluginFileFolder() + "\\" + plugin.GetPluginFileName());
		ePlugin.appendChild(eTmp);

		eTmp = xmlDoc.createElement("PluginFileVersion");
		eTmp.text = "";//objAralTransApp.GetFileVersion(plugin.GetPluginFileFolder() + "\\" + plugin.GetPluginFileName());
		ePlugin.appendChild(eTmp);

		eTmp = xmlDoc.createElement("DownloadUrl");
		eTmp.text = plugin.GetDownloadUrl();
		ePlugin.appendChild(eTmp);

		eTmp = xmlDoc.createElement("PluginName");
		eTmp.text = plugin.GetPluginName();
		ePlugin.appendChild(eTmp);

		eTmp = xmlDoc.createElement("PluginType");
		eTmp.text = plugin.GetPluginType();
		ePlugin.appendChild(eTmp);

		eTmp = xmlDoc.createElement("PluginOption");
		eTmp.text = plugin.GetPluginOption();
		ePlugin.appendChild(eTmp);

		ePluginList.appendChild(ePlugin);
	} 

	eSetting.appendChild(ePluginList);
	
	
	// Add 'ContextList' element into 'Setting'
	var eContextList = xmlDoc.createElement("ContextList");
	var c_cnt = objATContainer.GetContextCount();
	for(var i=0; i<c_cnt; i++)
	{
		var context = objATContainer.GetContext(i);
		if(!context) continue;
		
		// Create 'Context' element
		var eContext = xmlDoc.createElement("Context");

		// Create and Add 'ContextName' element to 'Context'
		eTmp = xmlDoc.createElement("ContextName");
		eTmp.text = context.GetContextName();
		eContext.appendChild(eTmp);

		// Create and Add 'ObjectList' element to 'Context'
		var eObjectList = xmlDoc.createElement("ObjectList");
		var obj_cnt = context.GetTransObjectCount();
		for(var j=0; j<obj_cnt; j++)
		{
			var eObject = xmlDoc.createElement("Object");

			eTmp = xmlDoc.createElement("ObjectName");
			eTmp.text = context.GetTransObjectName(j);
			eObject.appendChild(eTmp);
			
			eTmp = xmlDoc.createElement("ObjectOption");
			eTmp.text = context.GetTransObjectOption(j);
			eObject.appendChild(eTmp);
			
			eObjectList.appendChild(eObject);
		}
		eContext.appendChild(eObjectList);		

		// Add 'Context' element to 'ContextList'
		eContextList.appendChild(eContext);
	} 

	eSetting.appendChild(eContextList);

	
	// Save to file
	//alert(xmlDoc.xml);
	xmlDoc.save(strFilePathName); 
	alert("Setting was saved successfully.");
	window.close();
}

function onClickBrowse()
{	
	var strResult = browseFolder("Select folder setting will be saved");
	//var strResult = objAralTransApp.ShowFileDialog(false, "AralTrans Setting (*.ats)|*.ats|All Files (*.*)|*.*||", objProcess.GetExecutionFileFolder() + "\\ATData")

	if(strResult != "")
	{
		getObject("textXmlFileFolder").value = strResult;
	}
}

//-->
</SCRIPT>

</HEAD>



<BODY>

<!-- Start of layout table -->
			작성자 : <INPUT type="text" name="textSettingAuthor" value="아무개" class="input2">
			<br>
			세팅 이름 : <INPUT type="text" name="textSettingName" value="어떤 세팅" class="input2">
			<br>
			세팅 설명 : <INPUT type="text" name="textSettingDescription" value="테스트 세팅입니다." class="input2">
			<br>
			썸네일 이미지 URL : <INPUT type="text" name="textSettingThumbnailUrl" value="http://" class="input2">
			<br>
			로케일 프로그램 : 
			<select name="textLocaleProgram" class="select1">
				<option value="">none</option>
				<option value="AppLocale">AppLocale</option>
				<option value="JonK">JonK</option>
				<option value="KonJ">KonJ</option>
			</select>
			<select name="comboAppLocaleOption" style="visibility:hidden;">
				<option value="/L0411">Japanese(/L0411)</option>
			</select>
			<br>
			후킹 지연시간 : <INPUT type="text" name="textDelay" value="0" class="input2">
			<br>
			<br>
			저장 위치 : <INPUT type="text" name="textXmlFileFolder" value="" class="input2">
			<input type="button" name="btnBrowse" value="Browse" onClick="onClickBrowse();">
			<br>
			파일명 : <INPUT type="text" name="textXmlFileName" value="" class="input2">
			<br>
			<INPUT type="button" name="btnSave" value="Save" onClick="Save();">
<!-- End of layout table -->

</BODY>
</HTML>
